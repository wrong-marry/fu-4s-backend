name: CI/CD Pipeline

on:
  push:
    branches:
      - unit_test  # Set to whatever branch you want to trigger the deployment.

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK 22
        uses: actions/setup-java@v2
        with:
          java-version: '22'
          distribution: 'temurin'  # Using Temurin distribution

      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: linhpksw/tiemcheit-be-spring-boot-app:latest
          build-args: |
            DB_URL=${{ secrets.DB_URL }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: SSH and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Stop all containers (prevents errors if any are still running)
            docker stop $(docker ps -aq)
            
            # Remove all containers (frees up resources)
            docker rm -f $(docker ps -aq)
            
            # Remove all unused Docker images (cleans up old images)
            docker image prune -a -f
            
            # Pull the latest image
            docker pull linhpksw/tiemcheit-be-spring-boot-app:latest
            
            # Run the new container with environment variables
            docker run --name tiemcheitapp -d -p 8080:8080 linhpksw/tiemcheit-be-spring-boot-app:latest
